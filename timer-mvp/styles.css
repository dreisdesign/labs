* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    width: 100vw;
    overflow: hidden;
}

.container {
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    padding: 10px;
    max-width: 90%;
    margin: 0 auto;
}

/* Fixed size for controls container */
.controls-container {
    flex: 0 0 auto;
    min-height: 70px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 5px;
    padding: 5px 0;
    width: 100%;
    background-color: rgba(255, 255, 255, 0.9);
    z-index: 10;
}

/* Improved grid sizing to fill available space */
.grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 5px;
    width: 100%;
    flex: 1;
    /* These ensure grid fills available space but doesn't overflow */
    max-height: calc(100vh - 100px);
    /* Account for controls height + padding */
    grid-auto-rows: 1fr;
    /* Equal height rows */
    margin-bottom: 10px;
    align-self: stretch;
}

/* Media queries for responsive grid columns */
@media (min-aspect-ratio: 4/3) and (min-width: 1200px) {
    .grid {
        grid-template-columns: repeat(4, 1fr);
    }
}

@media (min-aspect-ratio: 16/9) and (min-width: 1600px) {
    .grid {
        /* For very wide screens: 6 columns (2 rows) */
        grid-template-columns: repeat(6, 1fr);
    }
}

@media (max-aspect-ratio: 4/3) {
    .grid {
        /* For more square screens: 4 columns */
        grid-template-columns: repeat(4, 1fr);
    }
}

@media (max-aspect-ratio: 2/3) {
    .grid {
        /* For portrait screens: 3 columns (4 rows) */
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (max-aspect-ratio: 1/2) {
    .grid {
        /* For very tall screens: 2 columns (6 rows) */
        grid-template-columns: repeat(2, 1fr);
    }

    .container {
        padding: 10px;
    }
}

.cell {
    background-color: #eee;
    border: 1px solid #ddd;
    transition: background-color 0.3s;
    position: relative;
    width: 100%;
    height: 100%;
    min-height: 0;
    max-height: 100%;
}

/* Maintain square aspect ratio */
.cell::before {
    content: "";
    display: block;
    padding-top: 100%;
}

/* Subgrid styling */
.subgrid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 1px;
    z-index: 1;
}

.subcell {
    border: 1px solid rgba(0, 0, 0, 0.1);
    background-color: transparent;
    transition: background-color 0.2s;
}

.subcell.active {
    background-color: rgba(0, 0, 0, 0.7);
}

.subcell.flash {
    animation: flash 2s infinite;
}

@keyframes flash {

    0%,
    100% {
        background-color: rgba(0, 0, 0, 0.3);
    }

    50% {
        background-color: rgba(0, 0, 0, 0.7);
    }
}

/* Cell number styling */
.cell-number {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
}

.cell.active {
    background-color: #000;
}

.cell.active .cell-number {
    color: white;
}

.timer-display {
    text-align: center;
    font-weight: bold;
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.current-phase,
.total-time {
    display: flex;
    justify-content: center;
    gap: 2px;
    /* Reduced from 5px to 2px */
}

/* Add a bit of space after the labels */
.current-phase span:first-child,
.total-time span:first-child {
    margin-right: 4px;
}

.controls {
    display: flex;
    justify-content: center;
    gap: 10px;
    width: 100%;
}

button {
    cursor: pointer;
    padding: 5px 10px;
}

/* Special handling for very small screens */
@media (max-height: 500px) {
    .controls-container {
        min-height: 60px;
        flex-direction: row;
        flex-wrap: wrap;
    }

    .grid {
        margin-bottom: 5px;
        max-height: calc(100vh - 70px);
    }

    .container {
        padding: 5px;
    }
}