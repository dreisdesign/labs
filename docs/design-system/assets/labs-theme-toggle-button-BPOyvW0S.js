import"./labs-button-0XNiK1kJ.js";import{u as i,a as s,s as n}from"./button-configs-CUB_r__D.js";class a extends HTMLElement{static get observedAttributes(){return["variant"]}constructor(){super(),this.attachShadow({mode:"open"}),this.button=null,this.variant=this.getAttribute("variant")||"transparent"}connectedCallback(){this.render(),this.setupThemeObserver()}disconnectedCallback(){this.themeObserver&&this.themeObserver.disconnect()}attributeChangedCallback(e,r,t){e==="variant"&&r!==t&&(this.variant=t||"transparent",this.render())}setupThemeObserver(){this.themeObserver=new MutationObserver(()=>{const e=document.body.classList.contains("theme-dark")||document.body.classList.contains("dark-mode");this.button&&(i(this.button,e),this.variant!=="container"&&this.button.setAttribute("iconcolor","var(--color-on-surface)"))}),this.themeObserver.observe(document.body,{attributes:!0,attributeFilter:["class"]})}render(){const e=this.getAttribute("variant")||"transparent";this.shadowRoot.innerHTML=`
      <style>
        :host { display: ${e==="container"?"block":"inline-block"}; width: ${e==="container"?"100%":"auto"}; }
        .wrap { width: ${e==="container"?"100%":"auto"}; }
      </style>
      <div class="wrap"></div>
    `;const r=this.shadowRoot.querySelector(".wrap");let t;e==="container"?t=s("themeToggleContainer"):e==="icon"?(t=document.createElement("labs-button"),t.setAttribute("variant","icon"),t.setAttribute("icon","bedtime"),t.setAttribute("aria-label","Toggle theme"),t.setAttribute("iconcolor","var(--color-on-surface)")):t=s("themeToggle"),r.appendChild(t),this.button=t,n(t,(c,l)=>{e!=="container"&&t.setAttribute("iconcolor","var(--color-on-surface)")})}}customElements.define("labs-theme-toggle-button",a);
