/*
 * Tracker - A simple activity tracking app
 * main.css - Core styles and themes
 * Version: 1.1.0
 */

/* --- Font Face Definition --- */
@font-face {
    font-family: 'Source Sans 3';
    src: url('../fonts/SourceSans3VF.woff2') format('woff2-variations');
    font-weight: 100 900;
    /* Define the weight range for the variable font */
    font-style: normal;
    font-display: swap;
    /* Improve loading performance */
}

/* --- Base Variables (Light Mode Defaults) --- */
:root {
    --color-primary: rgb(46, 43, 116);
    /* main purple */
    --color-secondary: rgb(13, 11, 63);
    /* dark purple */
    --color-primary-darker: rgb(25, 23, 80);
    /* New darker primary */
    --color-background: rgb(193, 193, 255);
    /* light background */
    --color-surface: rgb(255, 255, 255);
    /* white surface */
    --color-error: rgb(181, 0, 90);
    /* error pink */
    --color-error-inactive: rgb(181, 181, 181);
    /* inactive error (desaturated) */
    --color-on-primary: rgb(255, 255, 255);
    /* white text on primary */
    --color-on-background: rgb(22, 10, 56);
    /* dark text */
    --color-on-surface: rgb(28, 27, 31);
    /* dark text */
    --color-on-error: rgb(255, 255, 255);
    /* white text on error */
    --color-on-error-inactive: rgb(255, 255, 255);
    /* white text on inactive error */
    --color-primary-75: rgba(46, 43, 116, 0.75);
    --color-primary-25: rgba(193, 193, 255, 0.25);
    --color-secondary-75: rgba(13, 11, 63, 0.75);
    --color-on-surface-75: rgba(28, 27, 31, 0.75);
    --settings-icon-color: rgba(28, 27, 31, 0.25);
    /* 25% opacity of color-on-surface */
    --undo-animation-duration: 3s;

    /* Font Size System */

    --font-size-sm: 0.6rem;
    /* Extra Small (e.g., version number) */

    --font-size-md: 1rem;
    /* Medium (e.g., body text, standard buttons) */

    --font-size-lg: 1.1rem;
    /* Large (e.g., primary action buttons) */

    --font-size-xl: 1.25rem;
    /* Double Extra Large (e.g., time entries) */

    --font-size-xxl: 1.75rem;
    /* Triple Extra Large (e.g., overlay titles) */

    --font-size-display: 5.5rem;
    /* Display (e.g., main metric value) */

    /* Focus visible styles for accessibility */
    --focus-outline-color: rgb(0, 95, 204);
    --focus-outline-width: 3px;
    --focus-outline-offset: 2px;
}

/* iOS PWA Status Bar Adjustments */
@supports (-webkit-touch-callout: none) {

    /* Target only iOS devices */
    body::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: env(safe-area-inset-top, 0);
        background-color: var(--color-background);
        z-index: 10000;
    }

    body.dark-mode::before {
        background-color: var(--color-background);
    }

    body {
        /* Add padding for the status bar */
        padding-top: env(safe-area-inset-top, 0);
    }

    /* Adjust version number position for iOS */
    .version-number {
        top: calc(env(safe-area-inset-top, 0) + 1rem);
    }

    /* Adjust app container for iOS */
    .app {
        padding-top: max(4vw, env(safe-area-inset-top, 0));
    }
}

/* --- Version Number --- */
.version-number {
    position: fixed;
    top: 1rem;
    right: 1rem;
    font-size: var(--font-size-sm);
    opacity: 0.8;
    font-family: monospace;
    color: var(--color-on-background);
    z-index: 1000;
    content: "v1.0.14";
    /* Updated version number */
}

/* --- Global Styles --- */
html,
body {
    height: 100%;
    margin: 0;
    padding: 0;
    background: var(--color-background);
    color: var(--color-on-background);
    font-family: 'Source Sans 3', system-ui, sans-serif;
    /* Apply new font */
    font-size: var(--font-size-md);
    line-height: 1.5;
    /* Add smooth transitions for theme changes */
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Add transitions to elements that change with theme */
.metric-card,
.time-entry,
.date-header,
.placeholder-entry,
.bottom-buttons-wrapper,
.metric-value,
.metric-label,
#mainContent,
#mainContent::-webkit-scrollbar,
.version-number {
    transition:
        background-color 0.3s ease,
        color 0.3s ease,
        border-color 0.3s ease,
        box-shadow 0.3s ease;
}

body {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 0;
}

/* --- Global focus styles for keyboard navigation --- */
:focus-visible {
    outline: var(--focus-outline-width) solid var(--focus-outline-color);
    outline-offset: var(--focus-outline-offset);
}

/* --- App Container --- */
.app {
    display: flex;
    flex-direction: column;
    height: 100vh;
    max-width: 400px;
    width: 100%;
    /* Changed from 100vw */
    margin: 0 auto;
    padding: 0;
    align-items: center;
    justify-content: flex-start;
    gap: 0;
    position: relative;
    min-height: unset;
    background: transparent;
}

/* --- Metric Card (Total Count) --- */
.metric-card {
    background: var(--color-surface);
    border-radius: 1.2rem;
    box-shadow: none;
    padding: 2.5rem 1.5rem 2rem 1.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    width: 100%;
    max-width: 80%;
    margin-top: 2.5rem;
    margin-bottom: 1.5rem;
}

/* Container for label and edit button */
.metric-label-container {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 4px;
    gap: 0.5rem;
    margin-bottom: -.5rem;
    transition: background-color 0.2s;
}

/* Remove background fill on hover */
.metric-label-container:hover {
    background: transparent;
}

.metric-label {
    font-size: var(--font-size-xl);
    color: var(--color-on-surface);
    font-weight: 500;
    padding: 0;
    margin: 0;
    transition: color 0.2s;
    cursor: pointer;
}

/* Remove the old contenteditable styling as we're using the overlay now */
.metric-label[contenteditable="true"] {
    display: none;
}

.edit-label-icon {
    width: 24px;
    height: 24px;
    background-color: var(--color-primary);
    mask-image: url('../assets/images/edit--fill.svg');
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    -webkit-mask-image: url('../assets/images/edit--fill.svg');
    -webkit-mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: center;
    opacity: 0;
    position: absolute;
    right: -30px;
    /* Slightly adjusted from -24px for better spacing */
    transition: opacity 0.2s ease, background-color 0.2s ease;
}

.metric-label-container:hover .edit-label-icon {
    opacity: 0.75;
}

.edit-label-icon:hover,
.metric-label-container:hover:active .edit-label-icon {
    background-color: var(--color-secondary);
    opacity: 1;
}

/* Override label edit icon colors in dark mode */
body.dark-mode .edit-label-icon {
    background-color: var(--color-primary);
}

body.dark-mode .metric-label-container:hover:active .edit-label-icon {
    background-color: var(--color-secondary);
}

/* Editing state styles for the metric label */
body.dark-mode .metric-label[contenteditable="true"] {
    background: rgba(149, 117, 205, 0.1);
}

/* Dark mode adjustment for hover effect - REMOVED */

.edit-label-button {
    padding: 0.2rem;
    background: none;
    border: none;
    cursor: pointer;
    opacity: 0.6;
    transition: opacity 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 44px;
    /* Minimum touch target size */
}

.edit-label-button:hover {
    opacity: 1;
}

.edit-label-button:focus-visible {
    outline: var(--focus-outline-width) solid var(--focus-outline-color);
    outline-offset: var(--focus-outline-offset);
}

.edit-icon {
    width: 1rem;
    height: 1rem;
    filter: var(--icon-filter, none);
}

/* Label Edit Overlay Styles */
.label-edit-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid var(--color-primary-75);
    border-radius: 0.5rem;
    background: var(--color-surface);
    color: var(--color-on-surface);
    font-family: 'Source Sans 3', system-ui, sans-serif;
    font-size: var(--font-size-lg);
    outline: none;
    margin: 1rem 0;
    box-sizing: border-box;
}

.label-edit-input:focus {
    border-color: var(--color-primary);
}

body.dark-mode .label-edit-input {
    border-color: var(--color-primary-75);
    background-color: rgb(40, 40, 40);
}

body.dark-mode .label-edit-input:focus {
    border-color: var(--color-primary);
}

.label-edit-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    gap: 0.75rem;
}

/* --- Metric Value --- */
.metric-value {
    font-size: var(--font-size-display);
    font-weight: 800;
    color: var(--color-primary);
    line-height: 1.1;
}

/* --- Track Button --- */
/* Base styles for all track buttons */
.track-button {
    font-size: var(--font-size-xl);
    font-weight: 600;
    border: none;
    border-radius: 5rem;
    background: var(--color-primary);
    color: var(--color-on-primary);
    cursor: pointer;
    transition: background-color 0.2s, transform 0.1s ease-out;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    overflow: hidden;
    position: relative;
}

/* Add active state for mouse down effect */
.track-button:active,
.track-button.button-pressed {
    background-color: var(--color-primary-darker);
    transform: scale(0.95);
    transition-duration: 0.05s;
}

/* Hover state */
.track-button:hover {
    background: var(--color-secondary);
}

/* Focus state for accessibility */
.track-button:focus-visible {
    outline: var(--focus-outline-width) solid var(--focus-outline-color);
    outline-offset: var(--focus-outline-offset);
}

/* Main button (primary action) positioned in the bottom bar */
.track-button--footer {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: auto;
    min-width: 120px;
    padding: 0.75rem 1.5rem;
    margin: 0;
}

/* Override transform for button pressed state */
.track-button--footer:active,
.track-button--footer.button-pressed {
    transform: translate(-50%, -50%) scale(0.95);
}

/* Track button checkmark styling */
.track-button-checkmark {
    position: absolute;
    opacity: 0;
    transform: scale(0.5) rotate(-180deg);
    /* Start rotated and scaled down */
}

/* Success state for track button */
.track-button.success .track-button-text {
    opacity: 0;
    transform: translateY(-10px);
    transition: opacity 0.3s ease-out, transform 0.3s ease-out;
    /* Keep text transition */
}

.track-button.success .track-button-checkmark {
    opacity: 1;
    /* Will be set by animation */
    transform: scale(1) rotate(0deg);
    /* Final state set by animation */
    animation: rollInCheckmark 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55) forwards;
    /* Apply roll-in animation */
}

/* Add keyframes for the roll-in animation */
@keyframes rollInCheckmark {
    from {
        opacity: 0;
        transform: scale(0.3) rotate(-180deg);
    }

    to {
        opacity: 1;
        transform: scale(1) rotate(0deg);
    }
}

.checkmark-icon {
    width: 1.5rem;
    height: 1.5rem;
    filter: var(--icon-filter, none);
}

/* Force the SVG path to use the correct color */
.track-button .checkmark-icon path {
    fill: var(--color-on-primary) !important;
}

/* For compatibility with some browsers that might not support direct path styling */
.track-button.success .track-button-checkmark img {
    filter: brightness(0) invert(1);
}

/* --- Main Content Area (Timestamp List) --- */
#mainContent {
    flex: 1 1 auto;
    overflow-y: auto;
    min-height: 200px;
    max-height: 100vh;
    /* Prevent collapse */
    max-width: 400px;
    width: 100%;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
    padding-bottom: 7rem;
    /* Ensure content is not overlapped by footer */
    background: transparent;

    /* Standard scrollbar properties (Firefox) */
    scrollbar-width: thin;
    scrollbar-color: var(--color-primary-75) var(--color-background);

    /* Ensure the scrollbar is always visible in Firefox when needed */
    overflow-y: auto;
    scrollbar-width: thin !important;

    -webkit-overflow-scrolling: touch;
    /* Improve scrolling on WebKit browsers */
}

/* Custom scrollbar for WebKit browsers */
.custom-scrollbar::-webkit-scrollbar {
    width: 12px;
}

.custom-scrollbar::-webkit-scrollbar-track {
    background: #f1f1f1;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 6px;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #555;
}

/* Dark mode scrollbar styles */
body.dark-mode .custom-scrollbar::-webkit-scrollbar-track {
    background: #333;
    /* darker track for dark mode */
}

body.dark-mode .custom-scrollbar::-webkit-scrollbar-thumb {
    background: #666;
    /* lighter thumb for dark mode */
}

body.dark-mode .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #888;
    /* even lighter on hover */
}

/* Handle cases where overflow is toggled by JavaScript */
.scrollbar-visible {
    overflow-y: scroll !important;
}

/* Timestamp List Container */
#timestampList {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    position: relative;
    padding-top: 0;
    width: 100%;
    transition: none;
}

/* --- Base animation timing --- */

/* Pop-in animation */
@keyframes popIn {
    from {
        opacity: 0;
        transform: scale(0.89);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Date header - always visible immediately */
.date-header {
    color: var(--color-on-background);
    font-size: var(--font-size-md);
    font-weight: 600;
    margin-top: 1rem;
    margin-bottom: 0.75rem;
    opacity: 1;
    animation: none;
    text-align: center;
}

/* --- Time Entry Styles --- */
.time-entry {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem;
    background: var(--color-surface);
    border-radius: 0.7rem;
    width: 75%;
    max-width: 85%;
    min-height: unset;
    height: auto;
    box-sizing: border-box;
    opacity: 1;
    transform: scale(1);
    transition: transform 0.3s ease-out, opacity 0.15s ease-out;
    margin: 0 auto;
    cursor: pointer;
    position: relative;
}

/* Active/pressed state for time entry */
.time-entry:active {
    transform: scale(0.95);
    transition-duration: 0.05s;
}

/* Ensure new entries start with the correct initial animation state */
.time-entry.new-entry {
    opacity: 0;
    transform: scale(.95);
    transition: none;
}

/* Time display styling */
.time-entry .time {
    text-align: center;
    font-size: var(--font-size-xl);
    font-weight: 600;
    padding: 0.25rem;
}

/* ----- Comment Icon Styling ----- */
/* Base comment icon styling with high specificity and !important flags */
.time-entry .comment-icon,
.time-entry .comment-edit-icon,
.time-entry .add-comment-icon {
    width: 24px !important;
    height: 24px !important;
    position: absolute !important;
    right: 12px !important;
    flex-shrink: 0 !important;
    transition: opacity 0.2s ease, background-color 0.2s ease !important;
    cursor: pointer !important;
}

/* Comment icon styling when entry has a comment */
.time-entry.has-comment .comment-icon {
    background-color: var(--color-primary) !important;
    mask-image: url('../assets/images/comment--fill.svg') !important;
    mask-size: contain !important;
    mask-repeat: no-repeat !important;
    mask-position: center !important;
    -webkit-mask-image: url('../assets/images/comment--fill.svg') !important;
    -webkit-mask-size: contain !important;
    -webkit-mask-repeat: no-repeat !important;
    -webkit-mask-position: center !important;
    opacity: 0.75 !important;
    display: block !important;
    visibility: visible !important;
}

/* Direct hover on the comment icon - just change color, don't switch icons */
.time-entry.has-comment .comment-icon:hover {
    opacity: 1 !important;
    background-color: var(--color-secondary) !important;
    transform: none !important;
}

/* Force the comment icon to remain visible on hover */
.time-entry.has-comment:hover .comment-icon {
    opacity: 1 !important;
    display: block !important;
    visibility: visible !important;
    background-color: var(--color-secondary) !important;
}

/* Completely hide the comment-edit-icon to prevent any switching */
.time-entry .comment-edit-icon,
.time-entry:hover .comment-edit-icon,
.time-entry.has-comment .comment-edit-icon,
.time-entry.has-comment:hover .comment-edit-icon {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
}

/* Add comment icon for entries without comments (hidden by default) */
.time-entry .add-comment-icon {
    background-color: var(--color-primary) !important;
    mask-image: url('../assets/images/add_comment--fill.svg') !important;
    mask-size: contain !important;
    mask-repeat: no-repeat !important;
    mask-position: center !important;
    -webkit-mask-image: url('../assets/images/add_comment--fill.svg') !important;
    -webkit-mask-size: contain !important;
    -webkit-mask-repeat: no-repeat !important;
    -webkit-mask-position: center !important;
    opacity: 0 !important;
    transition: opacity 0.2s ease, background-color 0.2s ease !important;
}

/* Show add comment icon on hover for entries without comments */
.time-entry:not(.has-comment):hover .add-comment-icon {
    opacity: 0.75 !important;
}

/* Direct hover on the add comment icon */
.time-entry:not(.has-comment) .add-comment-icon:hover {
    opacity: 1 !important;
    background-color: var(--color-secondary) !important;
}

/* ----- Dark Mode Comment Icons ----- */
/* Override comment icon colors in dark mode */
body.dark-mode .time-entry.has-comment .comment-icon {
    background-color: var(--color-primary) !important;
}

body.dark-mode .time-entry.has-comment .comment-icon:hover {
    background-color: var(--color-secondary) !important;
    opacity: 1 !important;
    transform: none !important;
}

/* Force the comment icon to remain visible on hover in dark mode */
body.dark-mode .time-entry.has-comment:hover .comment-icon {
    opacity: 1 !important;
    display: block !important;
    visibility: visible !important;
    background-color: var(--color-secondary) !important;
}

/* Force icons to be completely hidden in dark mode too */
body.dark-mode .time-entry .comment-edit-icon,
body.dark-mode .time-entry:hover .comment-edit-icon,
body.dark-mode .time-entry.has-comment .comment-edit-icon,
body.dark-mode .time-entry.has-comment:hover .comment-edit-icon {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
}

body.dark-mode .time-entry .add-comment-icon {
    background-color: var(--color-primary) !important;
}

body.dark-mode .time-entry:not(.has-comment) .add-comment-icon:hover {
    background-color: var(--color-secondary) !important;
    opacity: 1 !important;
}

/* ----- Comment Icon Swipe State ----- */
/* Ensure comment icons remain visible during swipe states */
.time-entry--swiped.has-comment .comment-icon {
    opacity: 0.75 !important;
    display: block !important;
    visibility: visible !important;
}

/* --- Comment Overlay Styles --- */
/* Comment textarea styling */
.comment-textarea {
    width: 100%;
    min-height: 100px;
    padding: 0.75rem;
    border: 1px solid var(--color-primary-75);
    border-radius: 0.5rem;
    background: var(--color-surface);
    color: var(--color-on-surface);
    font-family: 'Source Sans 3', system-ui, sans-serif;
    font-size: var(--font-size-md);
    resize: vertical;
    outline: none;
    margin: 1rem 0;
    box-sizing: border-box;
}

.comment-textarea:focus {
    border-color: var(--color-primary);
}

body.dark-mode .comment-textarea {
    border-color: var(--color-primary-75);
    background-color: rgb(40, 40, 40);
}

body.dark-mode .comment-textarea:focus {
    border-color: var(--color-primary);
}

.comment-actions {
    display: flex;
    justify-content: space-between;
    /* Changed to space-between to push buttons apart */
    margin-top: 1rem;
}

.comment-button {
    padding: 0.75rem 1rem;
    border: none;
    border-radius: 4px;
    font-weight: 600;
    font-size: var(--font-size-md);
    cursor: pointer;
    min-height: 44px;
}

.save-comment {
    background-color: var(--color-primary);
    color: var(--color-on-primary);
}

.save-comment:hover {
    background-color: var(--color-secondary);
}

/* Delete comment button styling - similar to Reset button in settings */
.delete-comment {
    background-color: transparent;
    color: var(--color-error);
    transition: background-color 0.2s, color 0.2s;
}

.delete-comment:hover {
    background-color: var(--color-error);
    color: var(--color-on-error);
}

.delete-comment.cancel {
    color: var(--color-primary);
}

.delete-comment.cancel:hover {
    background-color: var(--color-primary-25);
    color: var(--color-primary);
}

/* Display style for placeholder when list is empty */
.placeholder-entry {
    margin: 2rem 0;
    color: var(--color-on-background);
    opacity: 0.75;
    font-style: italic;
    text-align: center;
    display: block;
}

/* Remove Pulse animation */
.placeholder-entry.pulsing {
    animation: none;
}

/* Remove Clearing animation style */
#timestampList.clearing .time-entry {
    animation: none;
}

/* Remove Ready for new animation style */
#timestampList.timestamps-ready-for-new .time-entry.new-entry {
    font-weight: 600;
    transition: none;
}

/* --- Bottom Buttons (Reset, Theme) --- */

/* Container for bottom buttons wrapper */
.bottom-buttons-wrapper {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    width: 95%;
    background-color: rgba(255, 255, 255, 0.15);
    /* Lighter background for light mode */
    backdrop-filter: blur(25px);
    -webkit-backdrop-filter: blur(16px);
    transition: background-color 0.3s ease, box-shadow 0.3s ease, opacity 0.3s;
    padding: 1.25rem 0;
    /* Increased by 50% from 0.75rem to 1.125rem */
    z-index: 100;
    border-radius: 100px 100px 0 0;
    box-shadow: none;
    pointer-events: auto;
    border-top: .75px solid rgba(255, 255, 255, .5);
    margin-left: auto;
    margin-right: auto;
}

.bottom-buttons-wrapper.shadow {
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
    border-top: .75px solid rgba(255, 255, 255, .15);
}

body.dark-mode .bottom-buttons-wrapper {
    background-color: var(--color-surface);
    border-top: .25px solid var(--color-primary-25);
}

body.dark-mode .bottom-buttons-wrapper.shadow {
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.2);
    border-top: .75px solid rgba(0, 0, 0, .15);
}

/* Container for bottom buttons */
.bottom-buttons {
    display: flex;
    position: relative;
    width: 100%;
    margin: 0 auto;
    padding: 0 1rem;
    box-sizing: border-box;
    min-height: 60px;
    /* Ensure container has enough height for absolute positioned children */
    background-color: transparent;
    pointer-events: auto;
    z-index: 101;
}

/* Make track button perfectly centered */
.track-button--footer {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    /* Center both horizontally and vertically */
    width: auto;
    min-width: 120px;
    /* Ensure the button has a minimum width */
    padding: 1.275rem 1.5rem;
    /* Ensure button has proper padding */
    margin: 0;
}

/* Track button transform when active (fix movement issue) */
.track-button--footer:active,
.track-button--footer.button-pressed {
    transform: translate(-50%, -50%) scale(0.95);
    /* Keep centered while scaling */
}

/* Position settings button 50px from the right */
.settings-button {
    position: absolute;
    right: 60px;
    /* Changed from 20px to 50px */
    top: 50%;
    transform: translateY(-50%);
    /* Center vertically */
    padding: 0.5rem;
    line-height: 1;
}

/* Base styles for bottom buttons */
.bottom-button-base {
    width: auto;
    margin: 0;
    /* Remove top margin as it's handled by the container */
    padding: 0;
    font-size: var(--font-size-lg);
    font-weight: 600;
    border: none;
    border-radius: 0;
    background: none;
    color: var(--color-primary);
    cursor: pointer;
    text-align: center;
    box-shadow: none;
    transition: color 0.2s;
    min-height: 44px;
    /* Minimum touch target size */
}

.bottom-button-base:hover {
    text-decoration: underline;
    background: none;
    text-underline-offset: 0.2em;
}

.bottom-button-base:focus-visible {
    outline: var(--focus-outline-width) solid var(--focus-outline-color);
    outline-offset: var(--focus-outline-offset);
}

/* Reset Button Styles */
/* Settings menu reset button styles */
.settings-item-reset {
    color: var(--color-error);
}

.settings-item-reset .reset-icon {
    background-color: var(--color-error);
}

/* Reset Icon */
.reset-icon {
    mask-image: url('../assets/images/reset--fill2.svg');
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    -webkit-mask-image: url('../assets/images/reset--fill2.svg');
    -webkit-mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: center;
}

/* Reset Icon - More specific selector with !important to override any conflicts */
#resetButton .reset-icon {
    width: 24px;
    height: 24px;
    background-color: var(--color-error);
    mask-image: url('../assets/images/reset--fill2.svg') !important;
    mask-size: contain !important;
    mask-repeat: no-repeat !important;
    mask-position: center !important;
    -webkit-mask-image: url('../assets/images/reset--fill2.svg') !important;
    -webkit-mask-size: contain !important;
    -webkit-mask-repeat: no-repeat !important;
    -webkit-mask-position: center !important;
    opacity: 0.75;
    transition: opacity 0.2s;
}

/* Inactive state for reset button when no entries exist */
.settings-item-reset.inactive {
    cursor: default;
    color: var(--color-error-inactive);
}

.settings-item-reset.inactive .reset-icon {
    background-color: var(--color-error-inactive);
}

/* Only apply hover styles when not inactive */
.settings-item-reset:not(.inactive):hover {
    background-color: var(--color-error);
    color: var(--color-on-error);
}

.settings-item-reset:not(.inactive):hover .reset-icon {
    background-color: var(--color-on-error);
}

/* Theme Toggle Button Styles */
.theme-toggle-button {
    padding: 0.5rem;
    line-height: 1;
}

.theme-toggle-button:hover {
    text-decoration: none;
    /* Remove background hover effect */
}

.theme-toggle-button:active,
.theme-toggle-button.button-pressed {
    transform: scale(0.95);
    transition-duration: 0.05s;
}

/* New styles for the span acting as the icon */
#themeIconSpan {
    display: inline-block;
    width: 3.5rem;
    height: 3.55rem;
    background-color: var(--color-on-background);
    opacity: 0.75;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    -webkit-mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: center;
    transform-origin: center;
    transition: transform 0.2s ease, background-color 0.2s ease;
    /* Add transition */
}

/* Override icon color in dark mode to match reset button */
body.dark-mode #themeIconSpan {
    background-color: var(--color-primary);
}

/* Add hover effects to the icon */
.theme-toggle-button:hover #themeIconSpan {
    transform: scale(1.25);
    background-color: #9575cd;
    /* Use a consistent color for both themes */
}

body.dark-mode .theme-toggle-button:hover #themeIconSpan {
    background-color: #9575cd;
    /* Same color as light mode for consistency */
}

/* --- List Collapse Styles --- */
.collapsed-list {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 1rem;
}

.collapse-toggle {
    background: none;
    border: none;
    color: var(--color-primary);
    font-size: var(--font-size-md);
    cursor: pointer;
    margin-top: 0.5rem;
    text-decoration: underline;
    padding: 0.5rem 0;
    width: 100%;
    text-align: center;
    min-height: 44px;
    /* Minimum touch target size */
    text-underline-offset: 0.2em;
}

.collapse-toggle:focus-visible {
    outline: var(--focus-outline-width) solid var(--focus-outline-color);
    outline-offset: var(--focus-outline-offset);
}

/* --- Skip to content link for keyboard users --- */
.skip-to-content {
    position: absolute;
    top: -999px;
    left: 0;
    background: var(--color-primary);
    color: var(--color-on-primary);
    padding: 1rem;
    z-index: 9999;
    transition: top 0.3s;
}

.skip-to-content:focus {
    top: 0;
}

/* --- Animations --- */

/* Reduced Motion Support --- */
@media (prefers-reduced-motion: reduce) {
    /* Remove animation overrides */
}

/* --- Responsive Styles --- */
@media (max-width: 600px) {
    .app {
        max-width: 98vw;
        padding: 2vw 0 0 0;
    }

    .metric-card {
        padding: 2rem 0.5rem 1.5rem 0.5rem;
    }
}

/* --- Additional Accessibility Enhancements --- */
@media screen and (max-width: 767px) {

    /* Increase touch targets on mobile */
    .track-button,
    .bottom-button-base,
    .edit-label-button,
    .collapse-toggle {
        min-height: 48px;
        /* Larger touch targets on mobile */
        padding: 0.75rem;
    }

    /* Increase font size on mobile for better readability */
    html,
    body {
        font-size: 16px;
        /* Ensure base font size is maintained on mobile */
    }

    /* Position settings button 50px from the right */
    .settings-button {
        right: 30px;
    }

}

/* High contrast mode support */
@media (forced-colors: active) {
    :root {
        --focus-outline-color: CanvasText;
    }

    .track-button,
    .bottom-button-base,
    .edit-label-button,
    .collapse-toggle {
        border: 1px solid CanvasText;
    }
}

/* Ensure proper focus state for any focusable elements not already covered */
[tabindex]:focus-visible:not([tabindex="-1"]) {
    outline: var(--focus-outline-width) solid var(--focus-outline-color);
    outline-offset: var(--focus-outline-offset);
}

/* Improved screen reader support with ARIA states */
[aria-disabled="true"] {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
}

/* Print styles for better accessibility when printed */
@media print {
    body {
        background: white;
        color: black;
        font-size: 12pt;
    }

    .track-button,
    .bottom-buttons,
    .edit-label-button {
        display: none !important;
    }

    .app {
        width: 100%;
        max-width: 100%;
        padding: 0;
    }

    #mainContent {
        max-height: none;
        overflow: visible;
    }
}

/* --- Dark Mode Variable Overrides --- */
body.dark-mode {
    /* Background and surface colors */
    --color-background: rgb(18, 18, 18);
    /* dark background */
    --color-surface: rgb(30, 30, 30);
    /* dark surface */

    /* Primary and accent colors */
    --color-primary: rgb(149, 117, 205);
    /* lighter purple */
    --color-primary-darker: rgb(110, 85, 160);
    /* New darker primary for dark mode */
    --color-secondary: rgb(126, 87, 194);
    /* dark mode secondary */
    --color-error: rgb(207, 102, 121);
    /* light error */

    /* Text colors (on different backgrounds) */
    --color-on-primary: rgb(0, 0, 0);
    /* black text on light primary */
    --color-on-background: rgb(255, 255, 255);
    /* Increased contrast from rgb(224, 224, 224) - light text */
    --color-on-surface: rgb(255, 255, 255);
    /* Increased contrast from rgb(224, 224, 224) - light text */
    --color-on-error: rgb(0, 0, 0);
    /* black text on error */

    /* Opacity variants */
    --color-primary-75: rgba(149, 117, 205, 0.75);
    --color-secondary-75: rgba(126, 87, 194, 0.75);
    --color-on-surface-75: rgba(255, 255, 255, 0.75);
    /* Increased contrast */

    /* Utility variables */
    --icon-filter: invert(1);
    --focus-outline-color: rgb(255, 213, 0);
    /* Different focus color for dark mode for better visibility */
}

/* Remove the old date label styles since we're not using it anymore */
.imessage-date-label {
    display: none !important;
}

/* --- Date Group Styles for Nested Structure --- */
.date-group {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    margin-bottom: 0.5rem;
    animation: none;
}

.date-group.new-date-group {
    animation: popIn 0.35s cubic-bezier(0.4, 0.7, 0.4, 1.2);
}

.date-group .time-entry+.time-entry {
    margin-top: 1rem;
    /* Increased from 0.5rem to 1rem for more spacing between entries */
}

/* Settings Button Icon */
.settings-icon {
    width: 24px;
    height: 24px;
    background-color: var(--color-primary);
    mask-image: url('../assets/images/settings--fill.svg');
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    -webkit-mask-image: url('../assets/images/settings--fill.svg');
    -webkit-mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: center;
    opacity: 0.75;
    transition: opacity 0.2s, transform 0.2s;
}

.settings-button:hover .settings-icon {
    opacity: 1;
    transform: rotate(30deg);
}

/* Settings Menu Items */
.settings-item {
    display: flex;
    align-items: center;
    padding: 1rem;
    width: 100%;
    background: none;
    border: none;
    cursor: pointer;
    color: var(--color-on-surface);
    font-size: var(--font-size-md);
    text-align: left;
    border-radius: 0.5rem;
    transition: background-color 0.2s, color 0.2s;
}

.settings-item:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

body.dark-mode .settings-item:hover {
    background-color: rgba(255, 255, 255, 0.05);
}

/* Theme toggle specific styling for dark mode */
body.dark-mode #menuThemeToggle {
    background-color: rgba(149, 117, 205, 0.15);
}

body.dark-mode #menuThemeToggle:hover {
    background-color: var(--color-primary-25);
}

/* Light mode theme toggle hover */
#menuThemeToggle:hover {
    background-color: var(--color-primary-25);
}

/* --- Overlay Open State --- */
body.overlay-open {
    overflow: hidden;
    /* Prevent scrolling when overlay is open */
    height: 100%;
    width: 100%;
    /* Ensure the body takes up the full height of the window */
}

/* Keyboard open state for overlays */
.overlay.keyboard-open {
    align-items: flex-start;
    overflow-y: auto;
    height: 100%;
    /* Use transitions for all properties to make movement smooth */
    transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
}

.overlay.keyboard-open .overlay-content {
    margin-top: 1rem;
    /* Avoid using position:sticky for smoother animations */
    position: relative;
    transform: translateY(0);
    z-index: 1001;
    /* Maintain width consistency during keyboard opening */
    width: 90%;
    max-width: 400px;
    /* Use an improved transition curve for smoother movement */
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.2s ease, margin 0.3s ease;
}

/* --- Overlay Styles --- */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(25px);
    -webkit-backdrop-filter: blur(16px);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    transition: opacity 0.3s ease;
    padding: 1rem;
    box-sizing: border-box;
    /* Add padding and box-sizing for better layout control */
}

.overlay.hidden {
    opacity: 0;
    pointer-events: none;
    visibility: hidden;
}

.overlay-content {
    background-color: var(--color-surface);
    border-radius: 1rem;
    padding: 1.5rem;
    width: 90%;
    /* Keep width consistent */
    max-width: 400px;
    max-height: 80vh;
    overflow-y: auto;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.2);
    margin: auto;
    /* Add margin: auto to help with centering */
    position: relative;
    /* Enable positioning context */
    will-change: transform, opacity;
    /* Hint to browser to use hardware acceleration for both properties */
    transform: translateY(0);
    /* Prevent iOS from moving the overlay when keyboard appears */
    transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.2s ease;
    /* Optimized transition curve for smoother movement */
    box-sizing: border-box;
    /* Ensure padding is included in width calculations */
}

/* Handle keyboard appearance on mobile devices */
@media screen and (max-height: 500px),
(max-height: 100vw) {

    /* Added max-height: 100vw to catch landscape or keyboard-open scenarios */
    .overlay {
        align-items: flex-start;
        overflow-y: auto;
        /* Enable scroll when keyboard reduces viewport height */
        padding-bottom: 60vh;
        /* Add extra padding at bottom to ensure content stays in view */
    }

    .overlay-content {
        margin-top: 0.5rem;
        /* Reduced top margin for more space */
        max-height: 85vh;
        /* Higher max-height for more flexibility */
        transform: translateY(0);
        /* Ensure width consistency */
        width: 90%;
        max-width: 400px;
        /* Use transform instead of position for smoother animation */
        transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1),
            opacity 0.2s ease,
            margin 0.3s ease;
        /* Smooth easing function with explicit properties */
    }
}

body.dark-mode .overlay-content {
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.4);
}

.overlay-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
}

.overlay-header h2 {
    margin: 0;
    font-size: var(--font-size-xxl);
    color: var(--color-on-surface);
}

.close-button {
    background: none;
    border: none;
    cursor: pointer;
    border-radius: 50%;
    transition: background-color 0.2s;
    width: 3rem;
    /* Restore size for touch target */
    height: 3rem;
    /* Match width */
    display: flex;
    /* Use flex to center the img */
    align-items: center;
    justify-content: center;
    padding: 0;
}

.close-button:hover {
    background-color: var(--color-primary-25);
    /* Light hover effect */
}

.close-icon {
    width: 1.5rem;
    /* Control icon size */
    height: 1.5rem;
    /* Control icon size */
    display: block;
}

body.dark-mode .close-icon {
    filter: invert(1);
}

.overlay-body {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

/* Settings Icon Container */
.settings-item-icon-container {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    margin-right: 1rem;
}

/* Theme Icon */
.theme-icon {
    mask-image: url('../assets/images/mode-dark--fill.svg');
    -webkit-mask-image: url('../assets/images/mode-dark--fill.svg');
}

body.dark-mode .theme-icon {
    mask-image: url('../assets/images/mode-light--fill.svg');
    -webkit-mask-image: url('../assets/images/mode-light--fill.svg');
}

/* --- Undo Button Styles --- */
.undo-button {
    position: fixed;
    bottom: 120px;
    /* Increased from 100px to 120px to add 20px margin */
    left: 50%;
    transform: translateX(-50%);
    background-color: var(--color-error);
    color: var(--color-on-error);
    border: none;
    border-radius: 6px;
    padding: 0.7rem 1.5rem;
    font-weight: 600;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    transition: transform 0.2s, opacity 0.3s, bottom 0.3s;
    z-index: 99;
    opacity: 0;
    pointer-events: none;
    bottom: 110px;
    /* Increased from 90px to 110px to add 20px margin */
}

/* When the button should be shown */
.undo-button.show {
    opacity: 1;
    pointer-events: auto;
    bottom: 120px;
    /* Increased from 100px to 120px for consistent 20px margin */
}

/* When the button is hidden */
.undo-button.hidden {
    opacity: 0;
    pointer-events: none;
    bottom: 90px;
    visibility: hidden;
}

/* Hover and active states for the undo button */
.undo-button:hover {
    background-color: var(--color-error-darker, rgb(145, 0, 72));
    /* Darker version for light mode */
}

body.dark-mode .undo-button:hover {
    background-color: var(--color-error-darker, rgb(177, 72, 91));
    /* Darker version for dark mode */
}

.undo-button:active {
    transform: translateX(-50%) scale(0.95);
}

/* Dark mode adjustments */
body.dark-mode .undo-button {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);
}